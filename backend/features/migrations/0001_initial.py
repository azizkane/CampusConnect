# Generated by Django 5.1.3 on 2024-11-18 14:28

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('core', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='TimeStampedModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='CalendarSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('default_view', models.CharField(choices=[('Day', 'Day'), ('Week', 'Week'), ('Month', 'Month')], default='Month', max_length=50)),
                ('timezone', models.CharField(default='UTC', max_length=100)),
                ('notifications_enabled', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='calendar_settings', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Calendar Settings',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('access_level', models.CharField(choices=[('Public', 'Public'), ('Department', 'Department'), ('Private', 'Private')], max_length=10)),
                ('target', models.CharField(blank=True, max_length=255)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('manager', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='managed_categories', to=settings.AUTH_USER_MODEL)),
                ('school', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='library_categories', to='core.school')),
            ],
            options={
                'verbose_name_plural': 'Categories',
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('type', models.CharField(choices=[('Class', 'Class'), ('Exam', 'Exam'), ('Meeting', 'Meeting'), ('Activity', 'Activity'), ('Project', 'Project'), ('Holiday', 'Holiday')], max_length=10)),
                ('category', models.CharField(choices=[('default', 'Select a category'), ('Seminar', 'Seminar'), ('Workshop', 'Workshop'), ('StudySession', 'StudySession'), ('ClubActivity', 'ClubActivity'), ('ClassProject', 'ClassProject'), ('ResearchProject', 'ResearchProject'), ('Presentation', 'Presentation'), ('Conference', 'Conference'), ('OpenDay', 'OpenDay'), ('GroupWork', 'GroupWork'), ('IndividualWork', 'IndividualWork'), ('Competition', 'Competition'), ('Exhibition', 'Exhibition'), ('FieldTrip', 'FieldTrip'), ('CaseStudy', 'CaseStudy'), ('Thesis', 'Thesis'), ('Internship', 'Internship'), ('Mentorship', 'Mentorship'), ('PeerTutoring', 'PeerTutoring'), ('SkillsWorkshop', 'SkillsWorkshop'), ('TechnicalProject', 'TechnicalProject'), ('CreativeProject', 'CreativeProject'), ('CommunityService', 'CommunityService'), ('StartupProject', 'StartupProject'), ('Innovation', 'Innovation'), ('Hackathon', 'Hackathon'), ('DebateCompetition', 'DebateCompetition'), ('AcademicContest', 'AcademicContest')], default='default', max_length=20)),
                ('start_datetime', models.DateTimeField()),
                ('end_datetime', models.DateTimeField()),
                ('place', models.CharField(blank=True, max_length=255)),
                ('is_recurring', models.BooleanField(default=False)),
                ('recurrence_pattern', models.JSONField(blank=True, default=dict)),
                ('reminder_settings', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('classroom', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='events', to='core.classroom')),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='events', to='core.department')),
                ('organizer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='organized_events', to=settings.AUTH_USER_MODEL)),
                ('participants', models.ManyToManyField(related_name='events', to=settings.AUTH_USER_MODEL)),
                ('school', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='events', to='core.school')),
            ],
        ),
        migrations.CreateModel(
            name='Forum',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='forums', to='core.department')),
                ('moderator', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='moderated_forums', to=settings.AUTH_USER_MODEL)),
                ('school', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='forums', to='core.school')),
            ],
        ),
        migrations.CreateModel(
            name='Library',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('target', models.CharField(blank=True, max_length=255)),
                ('access_level', models.CharField(choices=[('Public', 'Public'), ('Department', 'Department'), ('Private', 'Private')], max_length=10)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='libraries', to='features.category')),
                ('department', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='libraries', to='core.department')),
            ],
            options={
                'verbose_name_plural': 'Libraries',
            },
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('file_path', models.FileField(upload_to='library_documents/')),
                ('file_size', models.PositiveIntegerField()),
                ('file_type', models.CharField(max_length=50)),
                ('access_level', models.CharField(choices=[('Public', 'Public'), ('Department', 'Department'), ('Private', 'Private')], max_length=10)),
                ('download_count', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('uploaded_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='uploaded_documents', to=settings.AUTH_USER_MODEL)),
                ('library', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='features.library')),
            ],
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('place', models.CharField(blank=True, max_length=255)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('status', models.CharField(choices=[('Planning', 'Planning'), ('Active', 'Active'), ('OnHold', 'OnHold'), ('Completed', 'Completed'), ('Archived', 'Archived')], default='Planning', max_length=10)),
                ('priority', models.CharField(choices=[('Low', 'Low'), ('Medium', 'Medium'), ('High', 'High')], default='Medium', max_length=10)),
                ('category', models.CharField(choices=[('default', 'Select a category'), ('Seminar', 'Seminar'), ('Workshop', 'Workshop'), ('StudySession', 'StudySession'), ('ClubActivity', 'ClubActivity'), ('ClassProject', 'ClassProject'), ('ResearchProject', 'ResearchProject'), ('Presentation', 'Presentation'), ('Conference', 'Conference'), ('OpenDay', 'OpenDay'), ('GroupWork', 'GroupWork'), ('IndividualWork', 'IndividualWork'), ('Competition', 'Competition'), ('Exhibition', 'Exhibition'), ('FieldTrip', 'FieldTrip'), ('CaseStudy', 'CaseStudy'), ('Thesis', 'Thesis'), ('Internship', 'Internship'), ('Mentorship', 'Mentorship'), ('PeerTutoring', 'PeerTutoring'), ('SkillsWorkshop', 'SkillsWorkshop'), ('TechnicalProject', 'TechnicalProject'), ('CreativeProject', 'CreativeProject'), ('CommunityService', 'CommunityService'), ('StartupProject', 'StartupProject'), ('Innovation', 'Innovation'), ('Hackathon', 'Hackathon'), ('DebateCompetition', 'DebateCompetition'), ('AcademicContest', 'AcademicContest')], default='Project', max_length=20)),
                ('progress', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('supervisor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='supervised_projects', to=settings.AUTH_USER_MODEL)),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='projects', to='core.team')),
            ],
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('due_date', models.DateField()),
                ('status', models.CharField(choices=[('Pending', 'Pending'), ('InProgress', 'InProgress'), ('Completed', 'Completed')], default='Pending', max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('assigned_to', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tasks', to=settings.AUTH_USER_MODEL)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to='features.project')),
            ],
        ),
        migrations.CreateModel(
            name='Topic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('content', models.TextField()),
                ('is_pinned', models.BooleanField(default=False)),
                ('is_locked', models.BooleanField(default=False)),
                ('view_count', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_topics', to=settings.AUTH_USER_MODEL)),
                ('forum', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='topics', to='features.forum')),
            ],
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('is_edited', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='posts', to=settings.AUTH_USER_MODEL)),
                ('parent_post', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='replies', to='features.post')),
                ('topic', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='posts', to='features.topic')),
            ],
        ),
        migrations.CreateModel(
            name='SharedCalendar',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('members', models.ManyToManyField(related_name='shared_calendars', to=settings.AUTH_USER_MODEL)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='owned_calendars', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Shared Calendars',
                'indexes': [models.Index(fields=['owner'], name='features_sh_owner_i_6f5e7d_idx'), models.Index(fields=['name'], name='features_sh_name_624440_idx')],
            },
        ),
    ]
